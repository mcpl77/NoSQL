# Развертывание Consul через Docker
# 1. Создание конфигурационных файлов
## 1.1. Создаем файл consul-config.json:
```json
{
  "datacenter": "dc1",
  "node_name": "consul-server-1",
  "server": true,
  "bootstrap_expect": 3,
  "bind_addr": "0.0.0.0",
  "client_addr": "0.0.0.0",
  "ui": true,
  "log_level": "INFO",
  "enable_local_script_checks": true,
  "connect": {
    "enabled": true
  }
}
```
## 1.2. Создаем файл docker-compose.yml:
```yaml
version: '3.7'

services:
  consul-server-1:
    image: consul:1.15
    container_name: consul-server-1
    command: "agent -server -bootstrap-expect=3 -node=consul-server-1 -client=0.0.0.0 -ui -config-file=/consul/config/consul-config.json"
    volumes:
      - ./consul-config.json:/consul/config/consul-config.json
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks:
      - consul-net

  consul-server-2:
    image: consul:1.15
    container_name: consul-server-2
    command: "agent -server -retry-join=consul-server-1 -node=consul-server-2 -client=0.0.0.0 -ui -config-file=/consul/config/consul-config.json"
    volumes:
      - ./consul-config.json:/consul/config/consul-config.json
    depends_on:
      - consul-server-1
    networks:
      - consul-net

  consul-server-3:
    image: consul:1.15
    container_name: consul-server-3
    command: "agent -server -retry-join=consul-server-1 -node=consul-server-3 -client=0.0.0.0 -ui -config-file=/consul/config/consul-config.json"
    volumes:
      - ./consul-config.json:/consul/config/consul-config.json
    depends_on:
      - consul-server-1
    networks:
      - consul-net

  consul-client:
    image: consul:1.15
    container_name: consul-client
    command: "agent -retry-join=consul-server-1 -node=consul-client -client=0.0.0.0 -ui"
    depends_on:
      - consul-server-1
    networks:
      - consul-net

networks:
  consul-net:
    driver: bridge
```
# 2. Запуск кластера
## 2.1. Загружаем образ Consul:
```bash
docker pull consul:1.15
```
# 2.2. Запускаем кластер:
```bash
docker-compose up -d
```
# 3. Проверка состояния кластера
```bash
docker exec -it consul-server-1 consul members
```
Или через веб-интерфейс: http://localhost:8500

# 4. Проверка отказоустойчивости
## 4.1. Проверка кворума
```bash
docker stop consul-server-2
```
## 4.2. Проверка состояния кластера:
```bash
docker exec -it consul-server-1 consul members
```
Кластер должен продолжать работать, так как осталось 2 из 3 серверов (кворум сохраняется).

## 4.3. Проверка потери кворума
Останавливаем второй сервер:
```bash
docker stop consul-server-3
```
Попробуем выполнить команду:
```bash
docker exec -it consul-server-1 consul members
```
Теперь видим сообщение об ошибке, так как кворум потерян (остался только 1 сервер из 3).

# 5. Восстановление кластера
## 5.1 Запускаем остановленные серверы:
```bash
docker start consul-server-2 consul-server-3
```
Проверяем, что кластер восстановился:
```bash
docker exec -it consul-server-1 consul members
```
## 5.2. Проверка клиентского узла
Останавливаем клиентский узел:
```bash
docker stop consul-client
```
Проверяем, что это не повлияло на работу серверов:
```bash
docker exec -it consul-server-1 consul members
```
Запускаем клиент снова:
```bash
docker start consul-client
```

# Дополнительные проверки
## Проверка репликации данных
Добавляем ключ на одном сервере:
```bash
docker exec -it consul-server-1 consul kv put test/key value1
```
Проверка значения на другом сервере:
```bash
docker exec -it consul-server-2 consul kv get test/key
```
Значение должно быть реплицировано.

Проверка работы DNS
Запрос DNS-записи:
```bash
dig @127.0.0.1 -p 8600 consul-server-1.node.consul
```
Должен вернуться IP-адрес контейнера.

Заключение
Кластер сохраняет работоспособность при выходе из строя одного сервера (при трех серверах в кластере) и автоматически восстанавливается при возвращении узлов в строй.

Логи:
PS C:\Consul> docker pull consul:1.15
1.15: Pulling from library/consul
d078792c4f91: Pull complete
fbdc56b403c6: Pull complete
c0e228c45cba: Pull complete
d9a4cda1fc71: Pull complete
a23041e1d950: Pull complete
27d6d74a7c1d: Pull complete
Digest: sha256:10084bbbed746968b0b9f8edab2f8552e44f117e35b88153a5e0a3ad1e15aa1a
Status: Downloaded newer image for consul:1.15
docker.io/library/consul:1.15
PS C:\Consul> docker-compose up -d
time="2025-05-09T17:06:47+05:00" level=warning msg="C:\\Consul\\docker-compose.yaml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
[+] Running 5/5
 ✔ Network consul_consul-net  Created                                                                                                                                                                                                   0.2s
 ✔ Container consul-server-1  Started                                                                                                                                                                                                   1.5s
 ✔ Container consul-server-2  Started                                                                                                                                                                                                   2.1s
 ✔ Container consul-server-3  Started                                                                                                                                                                                                   2.0s
 ✔ Container consul-client    Started                                                                                                                                                                                                   2.0s
PS C:\Consul> docker exec -it consul-server-1 consul members
Node             Address          Status  Type    Build   Protocol  DC   Partition  Segment
consul-server-1  172.19.0.2:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-server-2  172.19.0.3:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-server-3  172.19.0.4:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-client    172.19.0.5:8301  alive   client  1.15.4  2         dc1  default    <default>
PS C:\Consul> docker stop consul-server-2
consul-server-2
PS C:\Consul> docker exec -it consul-server-1 consul members
Node             Address          Status  Type    Build   Protocol  DC   Partition  Segment
consul-server-1  172.19.0.2:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-server-2  172.19.0.3:8301  left    server  1.15.4  2         dc1  default    <all>
consul-server-3  172.19.0.4:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-client    172.19.0.5:8301  alive   client  1.15.4  2         dc1  default    <default>
PS C:\Consul> docker stop consul-server-3
consul-server-3
PS C:\Consul> docker exec -it consul-server-1 consul members
Node             Address          Status  Type    Build   Protocol  DC   Partition  Segment
consul-server-1  172.19.0.2:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-server-2  172.19.0.3:8301  left    server  1.15.4  2         dc1  default    <all>
consul-server-3  172.19.0.4:8301  failed  server  1.15.4  2         dc1  default    <all>
consul-client    172.19.0.5:8301  alive   client  1.15.4  2         dc1  default    <default>
PS C:\Consul> docker start consul-server-2 consul-server-3
consul-server-2
consul-server-3
PS C:\Consul> docker stop consul-client
consul-client
PS C:\Consul> docker exec -it consul-server-1 consul members
Node             Address          Status  Type    Build   Protocol  DC   Partition  Segment
consul-server-1  172.19.0.2:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-server-2  172.19.0.3:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-server-3  172.19.0.4:8301  alive   server  1.15.4  2         dc1  default    <all>
consul-client    172.19.0.5:8301  left    client  1.15.4  2         dc1  default    <default>
PS C:\Consul> docker start consul-client
consul-client
PS C:\Consul> docker exec -it consul-server-1 consul kv put test/key value1
Success! Data written to: test/key
PS C:\Consul> docker exec -it consul-server-2 consul kv get test/key
value1
