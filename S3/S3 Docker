# MinIO в Docker и работа с S3 API
# 1. Запуск MinIO в Docker
```bash
mkdir C:\minio\data
```
```bash
docker run -d -p 9000:9000 -p 9001:9001 --name minio -v C:/minio/data:/data -e "MINIO_ROOT_USER=admin" -e "MINIO_ROOT_PASSWORD=password123" quay.io/minio/minio server /data --console-address ":9001"
```
После в браузере переходим по http://localhost:9001 и проверяем на работоспособность

# 2. Создание Python-скрипта для работы с MinIO
Создаем скрипт для создания бакета, загрузки файла и получения списка файлов:
```python
import boto3
from botocore.exceptions import ClientError

# Конфигурация клиента MinIO
s3_client = boto3.client(
    's3',
    endpoint_url='http://localhost:9000',
    aws_access_key_id='admin',
    aws_secret_access_key='password123'
)

# 1. Создание бакета
def create_bucket(bucket_name):
    try:
        s3_client.create_bucket(Bucket=bucket_name)
        print(f"Бакет '{bucket_name}' успешно создан.")
    except ClientError as e:
        if e.response['Error']['Code'] == 'BucketAlreadyExists':
            print(f"Бакет '{bucket_name}' уже существует.")
        else:
            print(f"Ошибка при создании бакета: {e}")

# 2. Загрузка файла в бакет
def upload_file(file_path, bucket_name, object_name):
    try:
        s3_client.upload_file(file_path, bucket_name, object_name)
        print(f"Файл '{file_path}' успешно загружен в бакет '{bucket_name}' как '{object_name}'.")
    except ClientError as e:
        print(f"Ошибка при загрузке файла: {e}")

# 3. Получение списка файлов в бакете
def list_files(bucket_name):
    try:
        response = s3_client.list_objects_v2(Bucket=bucket_name)
        if 'Contents' in response:
            print(f"Файлы в бакете '{bucket_name}':")
            for obj in response['Contents']:
                print(f"- {obj['Key']}")
        else:
            print(f"Бакет '{bucket_name}' пуст.")
    except ClientError as e:
        print(f"Ошибка при получении списка файлов: {e}")

# Основная программа
if __name__ == "__main__":
    bucket_name = "my-bucket"
    file_path = "test.txt"  # Путь к локальному файлу
    object_name = "test.txt"  # Имя файла в бакете

    # Создаем тестовый файл
    with open(file_path, 'w') as f:
        f.write("Это тестовый файл для загрузки в MinIO.")

    # Выполняем операции
    create_bucket(bucket_name)
    upload_file(file_path, bucket_name, object_name)
    list_files(bucket_name)
```

Запускаем скрипт - результат на скринах
